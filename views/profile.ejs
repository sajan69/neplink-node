<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><%= user.username %>'s Profile - Neplink</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .profile-header {
      background-color: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    .profile-pic {
      width: 150px;
      height: 150px;
      object-fit: cover;
      border-radius: 50%;
      border: 2px solid #dee2e6;
    }
    .friends-list, .posts-list {
      margin-top: 20px;
    }
    .post {
      border: 1px solid #dee2e6;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 15px;
    }
    .post-media {
      max-width: 100%;
      height: auto;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Profile Header -->
    <div class="profile-header d-flex align-items-center">
      <img src="<%= user.profilePic %>" alt="Profile Picture" class="profile-pic me-4">
      <div>
        <h2><%= user.firstname %> <%= user.lastname %> (@<%= user.username %>)</h2>
        <!-- Optional: Edit Profile Button -->
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editProfileModal">Edit Profile</button>
      </div>
    </div>

    <!-- Friends List -->
    <div class="friends-list">
      <h3>Friends (<%= friends.length %>)</h3>
      <div class="row">
        <% if (friends.length === 0) { %>
          <p>You have no friends yet.</p>
        <% } else { %>
          <% friends.forEach(friend => { %>
            <div class="col-md-3 col-sm-4 col-6 mb-3">
              <div class="card">
                <img src="<%= friend.profilePic %>" class="card-img-top" alt="<%= friend.username %>">
                <div class="card-body">
                  <h5 class="card-title"><%= friend.firstName %> <%= friend.lastName %></h5>
                  <p class="card-text">@<%= friend.username %></p>
                </div>
              </div>
            </div>
          <% }); %>
        <% } %>
      </div>
    </div>

    <!-- User's Posts -->
    <div class="posts-list">
      <h3>Your Posts (<%= posts.length %>)</h3>
      <% if (posts.length === 0) { %>
        <p>You haven't made any posts yet.</p>
      <% } else { %>
        <% posts.forEach(post => { %>
          <div class="post" id="post-<%= post.id %>">
            <p><strong>Status:</strong> <%= post.status %></p>
            <p><strong>Caption:</strong> <%= post.caption %></p>
            <% if (post.mediaUrl) { %>
              <% if (post.mediaType === 'image') { %>
                <img src="<%= post.mediaUrl %>" alt="Post Media" class="post-media">
              <% } else if (post.mediaType === 'video') { %>
                <video controls class="post-media">
                  <source src="<%= post.mediaUrl %>" type="video/mp4">
                  Your browser does not support the video tag.
                </video>
              <% } %>
            <% } %>
            <p><strong>Likes:</strong> <%= post.likes ? Object.keys(post.likes).length : 0 %></p>
            <button class="btn btn-sm btn-success" onclick="likePost('<%= post.id %>')">Like</button>
            <button class="btn btn-sm btn-warning" onclick="unlikePost('<%= post.id %>')">Unlike</button>
            <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#editPostModal-<%= post.id %>">Edit</button>
            <button class="btn btn-sm btn-danger" onclick="deletePost('<%= post.id %>')">Delete</button>
          </div>

          <!-- Edit Post Modal -->
          <div class="modal fade" id="editPostModal-<%= post.id %>" tabindex="-1" aria-labelledby="editPostModalLabel-<%= post.id %>" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <form id="editPostForm-<%= post.id %>" enctype="multipart/form-data" onsubmit="editPost(event, '<%= post.id %>')">
                  <div class="modal-header">
                    <h5 class="modal-title" id="editPostModalLabel-<%= post.id %>">Edit Post</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    <div class="mb-3">
                      <label for="status-<%= post.id %>" class="form-label">Status</label>
                      <textarea class="form-control" id="status-<%= post.id %>" name="status" rows="3"><%= post.status %></textarea>
                    </div>
                    <div class="mb-3">
                      <label for="caption-<%= post.id %>" class="form-label">Caption</label>
                      <textarea class="form-control" id="caption-<%= post.id %>" name="caption" rows="2"><%= post.caption %></textarea>
                    </div>
                    <div class="mb-3">
                      <label for="media-<%= post.id %>" class="form-label">Media</label>
                      <input class="form-control" type="file" id="media-<%= post.id %>" name="media" accept="image/*,video/*">
                      <% if (post.mediaUrl) { %>
                        <p>Current Media:</p>
                        <% if (post.mediaType === 'image') { %>
                          <img src="<%= post.mediaUrl %>" alt="Post Media" class="img-fluid mt-2">
                        <% } else if (post.mediaType === 'video') { %>
                          <video controls class="img-fluid mt-2">
                            <source src="<%= post.mediaUrl %>" type="video/mp4">
                            Your browser does not support the video tag.
                          </video>
                        <% } %>
                      <% } %>
                    </div>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        <% }); %>
      <% } %>
    </div>

    <!-- Optional: Error Modal -->
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="errorModalLabel">Error</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body" id="errorModalBody">
            <!-- Error message will be injected here -->
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS and dependencies (Popper.js) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- JavaScript Functions for Posts -->
    <script>
      // Like a Post
      async function likePost(postId) {
        try {
          const response = await fetch(`/posts/${postId}/like`, {
            method: 'POST',
          });
          const data = await response.json();
          if (response.ok) {
            alert(data.message);
            location.reload();
          } else {
            showError(data.message);
          }
        } catch (error) {
          console.error(error);
          showError('Error liking post.');
        }
      }

      // Unlike a Post
      async function unlikePost(postId) {
        try {
          const response = await fetch(`/posts/${postId}/unlike`, {
            method: 'POST',
          });
          const data = await response.json();
          if (response.ok) {
            alert(data.message);
            location.reload();
          } else {
            showError(data.message);
          }
        } catch (error) {
          console.error(error);
          showError('Error unliking post.');
        }
      }

      // Delete a Post
      async function deletePost(postId) {
        if (!confirm('Are you sure you want to delete this post?')) return;
        try {
          const response = await fetch(`/posts/${postId}`, {
            method: 'DELETE',
          });
          const data = await response.json();
          if (response.ok) {
            alert(data.message);
            location.reload();
          } else {
            showError(data.message);
          }
        } catch (error) {
          console.error(error);
          showError('Error deleting post.');
        }
      }

      // Edit a Post
      async function editPost(event, postId) {
        event.preventDefault();
        const form = document.getElementById(`editPostForm-${postId}`);
        const formData = new FormData(form);
        try {
          const response = await fetch(`/posts/${postId}`, {
            method: 'PUT',
            body: formData,
          });
          const data = await response.json();
          if (response.ok) {
            alert(data.message);
            // Close the modal
            const modal = bootstrap.Modal.getInstance(document.getElementById(`editPostModal-${postId}`));
            modal.hide();
            location.reload();
          } else {
            showError(data.message);
          }
        } catch (error) {
          console.error(error);
          showError('Error updating post.');
        }
      }

      // Function to display errors in a modal
      function showError(message) {
        document.getElementById('errorModalBody').innerText = message;
        const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
        errorModal.show();
      }
    </script>
  </div>
</body>
</html>
